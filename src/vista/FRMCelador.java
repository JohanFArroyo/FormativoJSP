/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import controlador.controladorCelador;
import java.util.Iterator;
import javax.swing.table.DefaultTableModel;
import modelo.Celador;

/**
 *
 * @author CGAO
 */
public class FRMCelador extends javax.swing.JInternalFrame {

    controladorCelador clienteController = new controladorCelador();
    
    public FRMCelador() {
        initComponents();
        idCelador.setValue(0);
        idCelador.setVisible(false);
        limpiarFormulario();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        idCelador = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tNombreC = new javax.swing.JTextField();
        tCedula = new javax.swing.JTextField();
        bInsertar = new javax.swing.JButton();
        bModificar = new javax.swing.JButton();
        bEliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        taCelador = new javax.swing.JTable();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setTitle("Formulario Celador");

        idCelador.setText("0");

        jLabel1.setText("Nombre:");

        jLabel2.setText("Cedula:");

        tNombreC.setText("Nombre");

        tCedula.setText("Cedula");

        bInsertar.setText("Insertar");
        bInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bInsertarActionPerformed(evt);
            }
        });

        bModificar.setText("Modificar");
        bModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bModificarActionPerformed(evt);
            }
        });

        bEliminar.setText("Eliminar");
        bEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminarActionPerformed(evt);
            }
        });

        taCelador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "idCelador", "Nombre", "Cedula"
            }
        ));
        taCelador.setEnabled(false);
        taCelador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                taCeladorMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(taCelador);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idCelador, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(tNombreC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(tCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bInsertar)
                            .addComponent(bModificar)
                            .addComponent(bEliminar))
                        .addGap(35, 35, 35))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(7, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(idCelador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(bInsertar)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(tNombreC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(bModificar)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(tCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(bEliminar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminarActionPerformed
        clienteController.controlarCelador(evt, obtenerCelador());
        limpiarFormulario();
    }//GEN-LAST:event_bEliminarActionPerformed

    private void bModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bModificarActionPerformed
        clienteController.controlarCelador(evt, obtenerCelador());
        limpiarFormulario();
    }//GEN-LAST:event_bModificarActionPerformed

    private void bInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bInsertarActionPerformed
        clienteController.controlarCelador(evt, obtenerCelador());
        limpiarFormulario();
    }//GEN-LAST:event_bInsertarActionPerformed

    private void taCeladorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_taCeladorMouseClicked
        if (evt.getClickCount()==2) {
            int fila = taCelador.rowAtPoint(evt.getPoint());
            if (fila>-1) {
                idCelador.setValue((Integer)taCelador.getValueAt(fila, 0));
                tNombreC.setText((String)taCelador.getValueAt(fila, 1));
                tCedula.setText((String)taCelador.getValueAt(fila, 2));
                bModificar.setEnabled(true);
                bEliminar.setEnabled(true);
            }
        }

    }//GEN-LAST:event_taCeladorMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bEliminar;
    private javax.swing.JButton bInsertar;
    private javax.swing.JButton bModificar;
    private javax.swing.JFormattedTextField idCelador;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField tCedula;
    private javax.swing.JTextField tNombreC;
    private javax.swing.JTable taCelador;
    // End of variables declaration//GEN-END:variables
    private void limpiarFormulario(){
        idCelador.setValue(0);
        tNombreC.setText("Ingrese N");
        tCedula.setText("Ingrese C");
        bModificar.setEnabled(false);
        bEliminar.setEnabled(false);
        llenarTabla();
    }
    
    public void llenarTabla(){
        Celador unCelador = new Celador();
        DefaultTableModel tabla = (DefaultTableModel)taCelador.getModel();
        Iterator<Celador> itCelador = unCelador.listar();
        Object[] filaCelador = new Object[taCelador.getColumnCount()];
        tabla.setRowCount(0);
        while (itCelador.hasNext()) {
            unCelador = itCelador.next();
            filaCelador[0] = unCelador.getIdCelador();
            filaCelador[1] = unCelador.getNombreC();
            filaCelador[2] = unCelador.getCedula();
            tabla.addRow(filaCelador);
        }
    }
    private Celador obtenerCelador(){
        Celador elCelador = new Celador();
        elCelador.setIdCelador((Integer) idCelador.getValue());
        elCelador.setNombreC(tNombreC.getText());
        elCelador.setCedula(tCedula.getText());
        return elCelador;
    }

}
